apiVersion: apps/v1
kind: Deployment
metadata:  
  name: docker-registry
  namespace: docker-registry
spec:
  replicas: 2
  selector:
    matchLabels:
      app: docker-registry
  template:
    metadata:
      labels:
        app: docker-registry
    spec:
      containers:
      # - image: redis:latest
      #   imagePullPolicy: Always
      #   name: redis
      #   volumeMounts:
      #   - mountPath: /redis/data
      #     name: redis-data

      - image: registry:latest
        imagePullPolicy: Always
        name: docker-registry
        env:
        - name: REGISTRY_HTTP_SECRET
          value: registry-http-secret
        - name: REGISTRY_AUTH
          value: htpasswd
        - name: REGISTRY_AUTH_HTPASSWD_PATH
          value: /auth/htpasswd
        - name: REGISTRY_AUTH_HTPASSWD_REALM
          value: Registry Realm
        - name: REGISTRY_STORAGE_CACHE_BLOBDESCRIPTOR
          value: redis
        - name: REGISTRY_REDIS_ADDR
          value: redis:6379          
        - name: REGISTRY_STORAGE
          value: s3
        - name: REGISTRY_STORAGE_S3_ACCESSKEY
          valueFrom:
            secretKeyRef:
              name: aws-external-secret
              key: REGISTRY_STORAGE_S3_ACCESSKEY
        - name: REGISTRY_STORAGE_S3_SECRETKEY
          valueFrom:
            secretKeyRef:
              name: aws-external-secret
              key: REGISTRY_STORAGE_S3_SECRETKEY
        - name: REGISTRY_STORAGE_S3_BUCKET
          value: axregistry
        - name: REGISTRY_STORAGE_S3_REGION
          value: us-west-1
  
        ports:
        - containerPort: 5000
          name: http
          protocol: TCP
        volumeMounts:
        - name: auth
          mountPath: /auth/htpasswd
          subPath: htpasswd
          
      volumes:
      - name: auth
        configMap:
          name: auth
          items:
              - key: htpasswd
                path: htpasswd
      # - emptyDir: {}
      #   name: redis-data
